name: Run tests with miniforge
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Miniconda ${{ matrix.os }} Py${{ matrix.pyver }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: ["ubuntu-latest", "windows-latest", "macos-latest"]
            pyver: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: latest
          python-version: ${{ matrix.pyver }}
          conda-remove-defaults: true

      - name: Setup environment
        shell: bash -l {0}
        run: |
            conda install python=${{ matrix.pyver }} --file conda_requirements.txt --file conda_requirements_dev.txt

      - name: Build
        shell: bash -l {0}
        run: |
            python -m pip install --no-build-isolation -vv ./

      - name: Test
        shell: bash -l {0}
        run: |
            pytest --pyargs py_gd

      - name: Test Examples
        shell: bash -l {0}
        run: |
            python docs/examples/run_all_examples.py

  lint:
    name: Flake8 linting
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: latest
          python-version: "3.10"
          conda-remove-defaults: true
      - name: Lint
        shell: bash -l {0}
        run: |
            conda install flake8
            # flake8 config in setup.cfg
            # python -m flake8  --exit-zero --statistics py_gd/
            python -m flake8 --statistics py_gd/
